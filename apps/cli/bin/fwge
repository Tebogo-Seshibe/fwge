#!/usr/bin/env node

const { program, Argument } = require('commander')
const {
    newProject,
    saveProject,
    loadProject,
    buildProject,

    addScene,
    addSystem,
    addEntity,
    addComponent,
    addAsset,
} = require('../lib')

program.version('1.0.0');

//#region Project Commands
program.command('new')
    .description('Creates a new project')
    .argument('<project-name>')
    .action(newProject);

program.command('load')
    .description('Load an existing project')
    .argument('<filename>')
    .action(loadProject);

program.command('save')
    .description('Save the current project')
    .argument('<project-name>')
    .action(saveProject);

program.command('build')
    .description('Builds the current project')
    .addArgument(new Argument('type')
        .choices(
        [
            'native',
            'pwa',
        ])
    )
    .action(buildProject);
//#endregion

//#region Unit Commands
program.command('add')
    .description('Used to add a unit to the game')
    .addArgument(
        new Argument('type')
            .choices([
                'scene',
                'system',
                'entity',
                'component',
                'asset',
            ])
    )
    .argument('<name>')
    .action((type, name) =>
    {
        switch (type)
        {
            case 'scene':
                addScene(name);
                break;

            case 'system':
                addSystem(name);
                break;

            case 'entity':
                addEntity(name);
                break;

            case 'component':
                addComponent(name);
                break;

            case 'asset':
                addAsset(name);
                break;
        }
    });
//#endregion

program.parse();
